{
  "admin": "admin",
  "searchPlaceholder": "Search organization, application, gateway or device",
  "activeGateways": "Active Gateways",
  "gateways": "Gateways",
  "activeDevices": "Active Devices",
  "dashboard": "Dashboard",
  "deviceDataRateUsage": "Device data-rate usage",
  "networkServers": "Network-servers",
  "networkServer": "Network-server",
  "selectNetworkServer": "Select network-server",
  "gatewayProfiles": "Gateway-profiles",
  "organizations": "Organizations",
  "organization": "Organization",
  "allUsers": "All users",
  "apiKeys": "API keys",
  "orgDashboard": "Org. dashboard",
  "orgUsers": "Org. users",
  "orgApiKeys": "Org. API keys",
  "serviceProfiles": "Service-profiles",
  "deviceProfiles": "Device-profiles",
  "applications": "Applications",
  "add": "Add",
  "addSubmit": "Add network-server",
  "dismiss": "Dismiss",
  "name": "Name",
  "value": "Value",
  "server": "Server",
  "general": "General",
  "gatewayDiscovery": "Gateway discovery",
  "tlsCertificates": "TLS certificates",
  "networkServerName": "Network-server name",
  "networkServerServer": "Network-server server",
  "hostNameHelper": "A name to identify the network-server.",
  "hostPortHelper": "The hostname:port of the network-server (e.g. localhost:8000)",
  "enableGatewayDiscovery": "Enable gateway discovery",
  "enableGatewayDiscoveryHelper": "Enable the gateway discovery feature for this network-server.",
  "intervalPerDay": "Interval (per day)",
  "intervalHelper": "The number of gateway discovery 'pings' per day that ChirpStack Application Server will broadcast through each gateway.",
  "txFrequency": "TX frequency (Hz)",
  "frequencyHelper": "The frequency (Hz) used for transmitting the gateway discovery 'pings'. Please consult the LoRaWAN Regional Parameters specification for the channels valid for each region.",
  "txDataRate": "TX data-rate",
  "dataRateHelper": "The data-rate used for transmitting the gateway discovery 'pings'. Please consult the LoRaWAN Regional Parameters specification for the data-rates valid for each region.",
  "appServerCerts": "Certificates for ChirpStack Application Server to ChirpStack Network Server connection",
  "netServerCerts": "Certificates for ChirpStack Network Server to ChirpStack Application Server connection",
  "caCertificate": "CA certificate",
  "caHelper": "Paste the content of the CA certificate (PEM) file in the above textbox. Leave blank to disable TLS.",
  "tlsCertificate": "TLS certificate",
  "tlsHelper": "Paste the content of the TLS certificate (PEM) file in the above textbox. Leave blank to disable TLS.",
  "tlsKey": "TLS key",
  "tlsKeyHelper": "Paste the content of the TLS key (PEM) file in the above textbox. Leave blank to disable TLS. Note: for security reasons, the TLS key can't be retrieved after being submitted (the field is left blank). When re-submitting the form with an empty TLS key field (but populated TLS certificate field), the key won't be overwritten.",
  "delete": "Delete",
  "clickToCopy": "Click to copy",
  "hexString": "Hex string",
  "hexArray": "Hex array",
  "toggleByteOrder": "Toggle the byte order of the input. Some devices use LSB.",
  "generateRandomKey": "Generate random key.",
  "generateRandomDeviceAddress": "Generate random device address.",
  "generateRandomID": "Generate random ID.",
  "addNetServerQ": "Add a network-server?",
  "addNetServerHelperInfo": "ChirpStack Application Server isn't connected to a ChirpStack Network Server network-server. Did you know that ChirpStack Application Server can connect to multiple ChirpStack Network Server instances, e.g. to support multiple regions?",
  "wouldYouLikeToConnectQ": "Would you like to connect to a network-server now?",
  "addServiceProfileQ": "Add a service-profile?",
  "addServiceProfileHelperInfo": "The selected organization does not have a service-profile yet. A service-profile connects an organization to a network-server and defines the features that an organization can use on this network-server.",
  "wouldYouLikeToCreateServiceProfileQ": "Would you like to create a service-profile?",
  "createServiceProfile": "Create service-profile",
  "addDeviceProfileQ": "Add a service-profile?",
  "updateDeviceProfile": "Update device-profile",
  "addDeviceProfileHelperInfo": "The selected organization does not have a device-profile yet. A device-profile defines the capabilities and boot parameters of a device. You can create multiple device-profiles for different kind of devices.",
  "wouldYouLikeToCreateDeviceProfileQ": "Would you like to create a device-profile?",
  "createDeviceProfile": "Create device-profile",
  "apiKeyName": "API key name",
  "apiKeyID": "API key ID",
  "token": "Token",
  "tokenHelper": "Use this token when making API request with this API key. This token is provided once.",
  "apiKeyNameHelper": "A descriptive name for the API key",
  "globalApiKeys": "Global API keys",
  "create": "Create",
  "createApiKey": "Create API key",
  "apiKeyDeleteConfirmation": "Are you sure you want to delete this api key?",
  "deviceProfileDeleteConfirmation": "Are you sure you want to delete this device-profile?",
  "noDataAvailable": "No data available.",
  "neverSeen": "Never seen",
  "neverSeenOnline": "Never seen online",
  "inactive": "Inactive",
  "active": "Active",
  "every": "every",
  "second": "second",
  "2seconds": "2 seconds",
  "4seconds": "4 seconds",
  "8seconds": "8 seconds",
  "16seconds": "16 seconds",
  "32seconds": "32 seconds",
  "64seconds": "64 seconds",
  "128seconds": "128 seconds",
  "cayenneLPP": "Cayenne LPP",
  "customJS": "Custom JavaScript codec functions",
  "joinOTAAABP": "Join (OTAA / ABP)",
  "classB": "Class-B",
  "classC": "Class-C",
  "codec": "Codec",
  "tags": "Tags",
  "deviceProfileName": "Device-profile name",
  "deviceProfileNameHelper": "A name to identify the device-profile.",
  "deviceProfileNetworkServerHelper": "The network-server on which this device-profile will be provisioned. After creating the device-profile, this value can't be changed.",
  "version": "version",
  "lorawanMACVersionSupported": "The LoRaWAN MAC version supported by the device.",
  "lorawanRegParamsRevision": "LoRaWAN Regional Parameters revision",
  "selectLorawanRegParamsRevision": "Select LoRaWAN Regional Parameters revision",
  "revisionSupported": "Revision of the Regional Parameters specification supported by the device.",
  "adrAlgo": "ADR algorithm",
  "selectAdrAlgo": "Select ADR algorithm",
  "adrAlgoHelper": "The ADR algorithm that will be used for controlling the device data-rate.",
  "maxEIRP": "Max EIRP",
  "maxEIRPHelper": "Maximum EIRP supported by the device.",
  "uplinkInterval": "Uplink interval",
  "uplinkIntervalHelper": "The expected interval in seconds in which the device sends uplink messages. This is used to determine if a device is active or inactive.",
  "seconds": "seconds",
  "deviceSupportsOTAA": "Device supports OTAA",
  "delay": "delay",
  "rx1DelayHelper": "RX1 delay (valid values are 0 - 15).",
  "dataRateOffest": "data-rate offset",
  "regParamsHelper": "Please refer the LoRaWAN Regional Parameters specification for valid values.",
  "dataRate": "data-rate",
  "hz": "Hz",
  "channelFrequency": "channel frequency",
  "factoryPresetFrequencies": "Factory-preset frequencies",
  "factoryPresetFreqHelper": "List of factory-preset frequencies (Hz), comma separated.",
  "deviceSupportsClassB": "Device supports Class-B",
  "confirmedDownlinkTimeout": "confirmed downlink timeout",
  "confirmedDownlinkTimeoutHelper": "timeout (in seconds) for confirmed downlink transmissions.",
  "periodicity": "periodicity",
  "pingSlotPeriodicity": "ping-slot periodicity",
  "pingSlotDataRate": "ping-slot data-rate",
  "pingSlotFrequency": "ping-slot frequency",
  "selectClassBPingSlotPeriodicity": "Select Class-B ping-slot periodicity",
  "deviceSupportsClassC": "Device supports Class-C",
  "deviceSupportsClassCHelper": "Select this option when the device will operate as Class-C device immediately after activation. In case it sends a DeviceModeInd mac-command when it changes to Class-C, do not select this option.",
  "payloadCodec": "Payload codec",
  "selectPayloadCodec": "Select payload codec",
  "payloadCodecHelper": "By defining a payload codec, ChirpStack Application Server can encode and decode the binary device payload for you.",
  "tagsHelper": "Tags can be used to store additional key/value data.",
  "addTag": "Add tag",
  "fMustHave": "The function must have the signature",
  "decodeMustReturn": "and must return an object. ChirpStack Application Server will convert this object to JSON.",
  "encodeMustReturn": "and must return an array of bytes.",
  "CreateDevice.js": {
    "question": "Add a device-profile?",
    "helper": "The selected application does not have access to any device-profiles. A device-profile defines the capabilities and boot parameters of a device. You can create multiple device-profiles for different kind of devices.",
    "submitQuestion": "Would you like to create a device-profile?",
    "applications": "Applications",
    "devices:": "Devices",
    "create": "Create",
    "createDeviceProfile": "Create device-profile",
    "submitLabel": "Create device",
    "dismiss": "Dismiss"
  },
  "DeviceActivationJS": {
    "devAddrLabel": "Device address",
    "devAddrHelper": "While any device address can be entered, please note that a LoRaWAN compliant device address consists of an AddrPrefix (derived from the NetID) + NwkAddr.",
    "nwkSEncKey10Label": "Network session key (LoRaWAN 1.0)",
    "appSKey10Label": "Application session key (LoRaWAN 1.0)",
    "fCntUp10Label": "Uplink frame-counter",
    "nFCntDown10Label": "Downlink frame-counter (network)",
    "nwkSEncKey11Label": "Network session encryption key",
    "sNwkSIntKey11Label": "Serving network session integrity key",
    "fNwkSIntKey11Label": "Forwarding network session integrity key",
    "appSKey11Label": "Application session key",
    "fCntUp11Label": "Uplink frame-counter",
    "nFCntDown11Label": "Downlink frame-counter (network)",
    "aFCntDown11Label": "Downlink frame-counter (application)",
    "clearConfirmation": "Are you sure you want to clear this device devNonce?",
    "reactivateSubmitLabel": "(Re)activate device",
    "clearDevNonce": "Clear DevNonce",
    "aboutDevNonceClear": "About DevNonce Clear",
    "aboutText": "These are clear older DevNonce records from device activation records in Network Server.",
    "note": "Note",
    "note1": "The network server keeps track of a certain number of DevNonce values used by the end device in the past and ignores join requests with any of these DevNonce values from that end-device.",
    "note2": "sing this method we can clear older or already generated device activation records from the database to prevent the 'DevNonce already exists' error in the OTAA method.",
    "note3": "This clears all DevNonce records but keeps the latest 20 records to maintain device activation status.",
    "deleteConfirmation": "Are you sure you want to delete this device devNonce (older Activation records from Network Server)?",
    "yes": "YES",
    "no": "NO",
    "notActivatedMessage": "This device has not (yet) been activated."
  },
  "DeviceDataJS": {
    "confirmed": "Confirmed",
    "unconfirmed": "Unconfirmed",
    "FCnt": "FCnt",
    "FPort": "FPort",
    "devAddr": "DevAddr",
    "margin": "Margin",
    "Ack": "Ack",
    "MHz": "MHz",
    "GW": "GW",
    "help": "Help",
    "helpText": "These are the events as published to the application (using the JSON marshaler). Please refer to data integrations (documentation) for more information on integrating this with your application.\n ID values are converted from base64 to HEX for your convenience.",
    "close": "Close",
    "pause": "Pause",
    "resume": "Resume",
    "download": "Download",
    "clear": "Clear",
    "notConnectedToWS": "Not connected to Websocket API"
  },
  "DeviceDetailsJS": {
    "name": "Name",
    "description": "Description",
    "details": "Details",
    "deviceProfile": "Device-profile",
    "multicastGroups": "Multicast groups",
    "status": "Status",
    "lastSeenAt": "Last seen at",
    "state": "State",
    "enqueueDownlinkPayload": "Enqueue downlink payload",
    "enqueuePayload": "Enqueue payload",
    "disabled": "disabled",
    "enabled": "enabled",
    "flushConfirmation": "Are you sure you want to flush the device queue?",
    "downlinkQueue": "Downlink queue",
    "FCnt": "FCnt",
    "FPort": "FPort",
    "confirmed": "confirmed",
    "unconfirmed": "unconfirmed",
    "yes": "yes",
    "no": "no",
    "Confirmed": "Confirmed",
    "base64EncodedPayload": "Base64 encoded payload",
    "uplink": "uplink",
    "rssi": "rssi (reported by gateways)",
    "snr": "snr (reported by gateways)",
    "received": "Received",
    "errors": "Errors",
    "SNR": "SNR",
    "RSSI": "RSSI",
    "frequency": "frequency",
    "DR": "DR"
  },
  "DeviceFormJS": {
    "General": "General",
    "Variables": "Variables",
    "Tags": "Tags",
    "DeviceName": "Device name",
    "DeviceNameHelper": "The name may only contain words, numbers and dashes.",
    "DeviceDescription": "Device description",
    "DeviceEUI": "Device EUI",
    "DeviceProfile": "Device-profile",
    "DisableFrameCounterValidation": "Disable frame-counter validation",
    "Note": "Note that disabling the frame-counter validation will compromise security as it enables people to perform replay-attacks.",
    "DeviceIsDisabled": "Device is disabled",
    "FormHelper": "ChirpStack Network Server will ignore received uplink frames and join-requests from disabled devices.",
    "VariablesInfo": "Variables can be used to substitute placeholders in for example integrations, e.g. in case an integration requires the configuration of a device specific token.",
    "AddVariable": "Add variable",
    "TagsInfo": "Tags can be used as device filters and are exposed on events as additional meta-data for aggregation.",
    "AddTag": "Add tag"
  },
  "DeviceFrameJS": {
    "Help": "Help",
    "HelpText": "The frames below are the raw (and encrypted) LoRaWAN PHYPayload frames as seen by the gateway(s). This data is intedend for debugging only.",
    "Close": "Close",
    "Pause": "Pause",
    "Resume": "Resume",
    "Download": "Download",
    "Clear": "Clear",
    "NotConnectedToWS": "Not connected to Websocket API"
  },
  "DeviceKeysJS": {
    "nwkKey11Label": "Network key (LoRaWAN 1.1)",
    "nwkKey11Helper": "For LoRaWAN 1.1 devices. In case your device does not support LoRaWAN 1.1, update the device-profile first.",
    "appKey11Label": "Application key (LoRaWAN 1.1)",
    "appKey11Helper": "For LoRaWAN 1.1 devices. In case your device does not support LoRaWAN 1.1, update the device-profile first.",
    "nwkKey10Label": "Application key",
    "nwkKey10Helper": "For LoRaWAN 1.0 devices. In case your device supports LoRaWAN 1.1, update the device-profile first.",
    "SetDeviceKeys": "Set device-keys"
  },
  "DeviceLayoutJS": {
    "DeleteConfirmation": "Are you sure you want to delete this device?",
    "Delete": "Delete",
    "Details": "Details",
    "Configuration": "Configuration",
    "KeysOTAA": "Keys (OTAA)",
    "Activation": "Activation",
    "DeviceData": "Device data",
    "LoRaWANFrames": "LoRaWAN Frames"
  },
  "DeviceQueueItemFormJS": {
    "Port": "Port",
    "PortHelper": "Please note that the fPort value must be > 0.",
    "ConfirmedDownlink": "Confirmed downlink",
    "Base64Encoded": "Base64 encoded",
    "JSONObject": "JSON object",
    "Base64EncodedString": "Base64 encoded string",
    "FormHelper": "The device must be configured with a Device Profile supporting a Codec which is able to encode the given (JSON) payload."
  },
  "ListDevicesJS": {
    "DialogTitle": "Add devices to multicast-group",
    "DialogContentText": "Select the multicast-group to which the devices must be added:",
    "Cancel": "Cancel",
    "Add": "Add",
    "Create": "Create",
    "SelectedDevices": "Selected devices",
    "AddToMulticastGroup": "Add to multicast group",
    "LastSeen": "Last seen",
    "DeviceName": "Device name",
    "DeviceEUI": "Device EUI",
    "DeviceProfile": "Device profile",
    "LinkMargin": "Link margin",
    "Battery": "Battery"
  },
  "UpdateDeviceJS": {
    "UpdateDevice": "Update device"
  }
}
